class DBHelper{static get DATABASE_URL(){return"http://localhost:1337/restaurants"}static fetchRestaurants(t){iDBFetchData().then(function(e){if(e.length>0)return t(null,e)}).then(function(){fetch(DBHelper.DATABASE_URL).then(t=>t.json()).then(e=>t(null,e))})}static fetchRestaurantById(t,e){DBHelper.fetchRestaurants((i,n)=>{if(i)e(i,null);else{const i=n.find(e=>e.id==t);i?e(null,i):e("Restaurant does not exist",null)}})}static fetchRestaurantByCuisine(t,e){DBHelper.fetchRestaurants((i,n)=>{if(i)e(i,null);else{const i=n.filter(e=>e.cuisine_type==t);e(null,i)}})}static fetchRestaurantByNeighborhood(t,e){DBHelper.fetchRestaurants((i,n)=>{if(i)e(i,null);else{const i=n.filter(e=>e.neighborhood==t);e(null,i)}})}static fetchRestaurantByCuisineAndNeighborhood(t,e,i){DBHelper.fetchRestaurants((n,a)=>{if(n)i(n,null);else{let n=a;"all"!=t&&(n=n.filter(e=>e.cuisine_type==t)),"all"!=e&&(n=n.filter(t=>t.neighborhood==e)),i(null,n)}})}static fetchNeighborhoods(t){DBHelper.fetchRestaurants((e,i)=>{if(e)t(e,null);else{const e=i.map((t,e)=>i[e].neighborhood),n=e.filter((t,i)=>e.indexOf(t)==i);t(null,n)}})}static fetchCuisines(t){DBHelper.fetchRestaurants((e,i)=>{if(e)t(e,null);else{const e=i.map((t,e)=>i[e].cuisine_type),n=e.filter((t,i)=>e.indexOf(t)==i);t(null,n)}})}static urlForRestaurant(t){return`./restaurant.html?id=${t.id}`}static imageUrlForRestaurant(t){return`/img/${t.photograph}`}static imageSrcset(t){return`dist/img/${t.id}-270.jpg 270w,\n                dist/img/${t.id}-400.jpg 400w,\n                dist/img/${t.id}-650.jpg 650w,\n                dist/img/${t.id}.jpg 800w               \n                `}static homeImageSizes(){return"(max-width: 524px) 400px, (max-width: 774px) 650px,  270px"}static restaurantImageSizes(){return"(max-width: 394px) 270px, (max-width: 1064px) 650px, (min-width: 1065px) 800px, 800px"}static mapMarkerForRestaurant(t,e){return new google.maps.Marker({position:t.latlng,title:t.name,url:DBHelper.urlForRestaurant(t),map:e,animation:google.maps.Animation.DROP})}}